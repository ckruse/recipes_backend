//! SeaORM Entity. Generated by sea-orm-codegen 0.9.2

use async_graphql::SimpleObject;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize, SimpleObject)]
#[sea_orm(table_name = "tags")]
#[graphql(concrete(name = "Tag", params()))]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub tag: String,
    pub inserted_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::recipes_tags::Entity")]
    RecipesTags,
}

impl Related<super::recipes_tags::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::RecipesTags.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
